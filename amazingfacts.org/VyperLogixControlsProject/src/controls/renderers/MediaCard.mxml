<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" 
		   creationComplete="canvas1_creationCompleteHandler(event)" 
		   xmlns:controls="controls.*" horizontalScrollPolicy="off" verticalScrollPolicy="off">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.ImageUtils;
			import com.ObjectUtils;
			
			import controls.HTMLViewer;
			import controls.events.ClickedDocsListMediaCardEvent;
			
			import flash.filesystem.File;
			
			import mx.containers.HBox;
			import mx.controls.Alert;
			import mx.controls.Image;
			import mx.controls.Label;
			import mx.controls.TextArea;
			import mx.core.FlexGlobals;
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			import mx.utils.ObjectUtil;
			
			import spark.components.TextArea;
			import spark.components.TextInput;
			
			import utils.AIRHelper;
			
			[Bindable]
			public static var cell_width:Number = 290;
			
			[Bindable]
			public static var cell_height:Number = 105;
			
			[Bindable]
			public var icon_width:Number = 70;
			
			[Bindable]
			public var icon_height:Number = 70;
			
			private var has_reported_status:Boolean = false;
			
			private var missing_file_textarea:spark.components.TextArea;
			
			private var tips:Object = {
				'AFStudyGuideIcon' : '27 Amazing Facts Study Guides, enjoyed all over the world',
				'AudioIcon' : 'Audio File, Questions and answers from the hit radio program Bible Answers Live',
				'BookIcon' : 'A huge library of books, including 44 booklets by trusted Bible experts, an electronic health magazine, plus these timeless works: Steps to Christ, Acts of the Apostles, and more!',
				'KidStudyGuideIcon' : 'Kids Study Guide, topical study guides for kids, called Amazing Adventure',
				'StoraclesIcon' : '24 Storacles of Prophecy Bible lessons, providing new biblical insights',
				'VideoIcon' : '30 videos totaling over 25 hours of life-changing Bible teaching'
			};
			
			private function set_image_tooltip(data:Object):void {
				for (var i:String in this.tips) {
					if (String(data.data.image).toLowerCase().indexOf(i.toLowerCase()) > -1) {
						this.anImage.toolTip = this.tips[i];
						break;
					}
				}
			}
			
			private function callback_is_media_valid(_data:*):void {
				var _this:MediaCard = this;
				var aFile:File = AIRHelper.resolve(_data.data.media);
				this.enabled = aFile.exists;
				if (!this.has_reported_status) {
					if (!this.enabled) {
						var top:Number = this.titleLbl.y+this.titleLbl.height+5;
						this.missing_file_textarea = new spark.components.TextArea();
						this.missing_file_textarea.text = aFile.nativePath;
						this.missing_file_textarea.percentWidth = 100.0;
						this.missing_file_textarea.height = this.height - top;
						this.missing_file_textarea.x = 5;
						this.missing_file_textarea.y = top;
						this.missing_file_textarea.editable = false;
						this.missing_file_textarea.styleName = 'docs_listItemMissingText';
						this.addElement(this.missing_file_textarea);
						this.addEventListener(MouseEvent.CLICK, function (event:MouseEvent):void {
							System.setClipboard(_this.missing_file_textarea.text);
						});
					}
					var aLabel:Label = new Label();
					if ( (_data.reasons is Array) && (_data.reasons.length > 0) ) {
						var reasons:Object = {};
						for (var i:String in _data.reasons) {
							reasons[_data.reasons[i]] = _data.reasons[i];
						}
						var keys:Array = ObjectUtils.keys(reasons);
						aLabel.x = 10;
						aLabel.y = this.height - 15;
						aLabel.text = ((_data.reasons.length > 0) ? 'Found via: ' : '')+keys.join(', ');
						aLabel.styleName = 'docs_listItemReasonsText';
						aLabel.percentWidth = 100.0;
						this.addElement(aLabel);
					} else if (FlexGlobals.topLevelApplication.view.is_debugging) {
						aLabel.x = 10;
						aLabel.y = this.height - 15;
						aLabel.text = data.data.image;
						aLabel.styleName = 'docs_listItemReasonsText';
						aLabel.percentWidth = 100.0;
						this.addElement(aLabel);
					}
					this.has_reported_status = true;
				}
			}

			override public function set data(value:Object):void {
				super.data = value;
				
				if (value) {
					titleLbl.text = data.label;
					contentLbl.text = data.data.text;
					this.set_image_tooltip(data);
					titleLbl.visible = true;
					contentLbl.visible = true;
					this.enabled = false;
					this.callLater(this.callback_is_media_valid,[data]);
				} else {
					titleLbl.text = "";
					contentLbl.text = "";
					titleLbl.visible = false;
					contentLbl.visible = false;
				}
				
			}
			
			protected function itemrenderer1_clickHandler(event:MouseEvent):void {
				this.dispatchEvent(new ClickedDocsListMediaCardEvent(ClickedDocsListMediaCardEvent.TYPE_CLICKED_DOCSLIST_MEDIA_CARD,this.data));
			}
			
			private function get image_file():File {
				var aFile:File;
				try {
					aFile = AIRHelper.resolve(data.data.image);
				} catch (err:Error) {aFile = new File('app:/assets/icons/MissingGraphic.gif')}
				return aFile;
			}
			
			private function draw_line_on(hbox:HBox):void {
				if (hbox is HBox) {
					var y:Number = 17;
					var gr:Graphics = hbox.graphics;
					gr.lineStyle(2.0,0xffffff,1.0);
					gr.moveTo(this.icon_width+5,y);
					gr.lineTo(ListItemRenderer.cell_width-10,y); // -this.icon_width+50
				}
			}
			
			private function onCreationComplete_anImage(event:FlexEvent):void {
				var _this:MediaCard = this;
				var aFile:File = this.image_file;
				var hbox:HBox = event.currentTarget as HBox;
				ImageUtils.load_image(AIRHelper.normalize_url(aFile.nativePath),function (image:UIComponent,content:*):void {
					hbox.addChildAt(image,0);
					image.addEventListener(FlexEvent.CREATION_COMPLETE, function (event:FlexEvent):void {
						_this.draw_line_on(hbox);
					});
				});
			}
			
			protected function canvas1_creationCompleteHandler(event:FlexEvent):void {
				var gr:Graphics = this.graphics;
				gr.lineStyle(1,0x000000,1.0);
				gr.drawRect(0,0,this.width,this.height);
			}

		]]>
	</fx:Script>
	<mx:HBox id="anImage" x="5" y="5" creationComplete="onCreationComplete_anImage(event)">
		<mx:Spacer id="spacer" width="{this.icon_width-10}"/>
		<mx:VBox id="vbox1" width="100%" height="100%">
			<mx:Label id="titleLbl" width="100%" styleName="docs_listItemTitle"/>
			<controls:MultiLineLabel id="contentLbl" width="{MediaCard.cell_width-this.spacer.width-15}" styleName="docs_listItemTitleText" _text="{data.data.text}" paddingRight="5" textAlign="left"/>
		</mx:VBox>
	</mx:HBox>
</mx:Canvas>
