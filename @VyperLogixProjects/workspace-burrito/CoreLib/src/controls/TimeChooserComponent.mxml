<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Metadata>
		[Event(name="timeChanged", type="flash.events.Event")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import com.adobe.utils.DateUtil;
			import com.time.TimeStringUtil;
			
			[Bindable] private var ampmLabels:Array = new Array("AM","PM");
			[Bindable] private var fullTime:String;
			
			
			//You can set the default value from your parentDocument
			public function set defaultValue(src:String):void {
				this.hour = TimeStringUtil.getHour(src);
				this.minute = TimeStringUtil.getMinute(src);
				this.ampm = TimeStringUtil.getMeridien(src);
				hourvalue.value = Number(this.hour);
				minvalue.value = Number(this.minute);
				ampmvalue.selectedItem = this.ampm;
				fullTime = src;
			}
			
			[Bindable]
			public function get hour():String {
				var _hour:String = "0";
				if( hourvalue != null ) {
					_hour = hourvalue.value.toString();
					/*if( _hour == "NaN" || _hour == "0" ) {
					_hour = "1";
					}*/
				}
				return _hour;
			}
			public function set hour( src:String ):void {
				hourvalue.value = Number(src);
			}
			
			[Bindable]
			public function get minute():String {
				var _min:String;
				if( minvalue != null ) {
					_min = minvalue.value.toString();
					/*if( _min == "NaN" ) {
					_min = "0";
					}*/
				}
				return _min;
			}                
			public function set minute( src:String ):void {
				minvalue.value = Number(src);
			}
			
			[Bindable]
			public function get ampm():String {
				var _ampm:String;
				if( ampmvalue != null ) {
					_ampm = ampmvalue.selectedItem.toString();
				}
				return _ampm;
			}
			public function set ampm( src:String ):void {
				ampmvalue.selectedItem = src;
			}
			
			public function resetTimeText():void {
				//hour, minute, and ampm are taken from the getter/setters above
				fullTime = TimeStringUtil.setFullTime(hour, minute, ampm);
				dispatchEvent(new Event("timeChanged"));
			}
		]]>
	</fx:Script>
	<s:HGroup width="100%">
		<s:HGroup width="100%">
			<mx:NumericStepper 
				id="hourvalue"
				width="40"
				minimum="1" 
				maximum="12" 
				change="resetTimeText()" 
				toolTip="Select hour"/>     
			<s:HGroup width="100%" paddingTop="5">
				<s:Label text=":"/>
			</s:HGroup>
			<mx:NumericStepper 
				id="minvalue" 
				width="40"
				minimum="0" 
				maximum="59" 
				change="resetTimeText()" 
				toolTip="Select minute"/>   
		</s:HGroup>
		<s:HGroup width="100%" paddingTop="1">
			<mx:ComboBox 
				id="ampmvalue" 
				dataProvider="{ampmLabels}" 
				dropdownWidth="35" 
				width="50" 
				change="resetTimeText()"/>   
		</s:HGroup>
		<s:HGroup width="100%" paddingTop="2">
			<mx:Text id="timeText" fontWeight="bold" fontSize="13" text="{fullTime}"/>
		</s:HGroup>
	</s:HGroup>
</s:Group>
