<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	width="100%" height="100%" 
	xmlns:mob="openplug.elips.controls.*" 
	creationComplete="canvas1_creationCompleteHandler(event)">
	<mx:Script>
		<![CDATA[
			import mx.events.FlexEvent;

			[Bindable]
			private var buttonSize:int = 25;
			
			private var timer_delay_msec:Number = 30000;

			private var timer:Timer;

			public const admob_publisher_id:String = 'a14da7cdc250a43';
			private const admob_domain:String = 'http://www.near-by.info';
			public const admob_url:String = admob_domain+'/freestarbucks.html';
			public const admob_url2:String = admob_domain+'/freestarbucks2.php?verbose=&json=&pubid='+admob_publisher_id;

			private var admob_index:int = 0;
			private var admob_stack:Array = [admob_url,admob_url2];

			private function get next_admob_url():String {
				var url:String = this.admob_stack[this.admob_index];
				this.admob_index++;
				if (this.admob_index == this.admob_stack.length) {
					this.admob_index = 0;
				}
				return url;
			}
			
			private function get current_admob_url():String {
				var url:String = this.admob_stack[this.admob_index];
				return url;
			}
			
			protected function canvas1_creationCompleteHandler(event:FlexEvent):void {
				var _this:AdMobView = this;
				this.timer = new Timer(this.timer_delay_msec);
				this.timer.addEventListener(TimerEvent.TIMER, 
					function (event:TimerEvent):void {
						_this.timer.stop();
						trace(_this.toString()+' :: (1.1) '+_this.current_admob_url);
						_this.schedule_another_admob();
					}
				);
				this.html.location = this.next_admob_url;
				trace(this.toString()+' :: (1) '+this.current_admob_url);
				this.timer.start();
			}
			
			private function schedule_another_admob():void {
				this.html.location = this.next_admob_url;
				trace(this.toString()+' :: (5) '+this.current_admob_url);
				this.act.visible = this.act.includeInLayout = true;
				this.timer.start();
			}
			
			private function activity_start_if_possible():void {
				var isRunning:Boolean = this.act.isRunning();
				trace(this.toString()+' :: (3) isRunning='+isRunning);
				if (!isRunning) {
					trace(this.toString()+' :: (3.1) Started !');
					this.act.start();
				}
			}
			
			private function activity_stop_if_running():void {
				var isRunning:Boolean = this.act.isRunning();
				trace(this.toString()+' :: (4) isRunning='+isRunning);
				if (isRunning) {
					trace(this.toString()+' :: (4.1) Stopped !');
					this.act.stop();
					this.act.visible = this.act.includeInLayout = false;
				}
			}
			
			protected function html_locationChangeHandler(event:Event):void {
				this.activity_start_if_possible();
			}


			protected function html_loadingHandler(event:Event):void {
				this.activity_start_if_possible();
			}


			protected function html_completeHandler(event:Event):void {
				this.activity_stop_if_running();
			}

		]]>
	</mx:Script>
	<mx:VBox width="100%" height="100%">
		<mx:HBox width="100%">
			<mob:HTML width="100%" height="100%" id="html" locationChange="html_locationChangeHandler(event)" loading="html_loadingHandler(event)" complete="html_completeHandler(event)"/>
			<mob:ActivityIndicator id="act" height="{buttonSize}" width="{buttonSize}"/>
		</mx:HBox>
	</mx:VBox>
</mx:Canvas>
