<?xml version="1.0" encoding="utf-8"?>
<s:Scroller xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="100%" height="100%">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Metadata>
		[Event(name="selectedTabFromList", type="controls.MediaPresentation.DropDownList.events.SelectedTabFromListEvent")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			
			import controls.MediaPresentation.DropDownList.events.SelectedTabFromListEvent;
			
			public static var _selectedItem_:*;
			
			[Bindable]
			private var __dataProvider__:ArrayCollection;
			
			[Bindable]
			private var __labelField__:String;
			
			[Bindable]
			private var __selectedItem__:*;
			
			public function get labelField():String {
				return this.__labelField__;
			}
			
			public function set labelField(labelField:String):void {
				if (this.__labelField__ != labelField) {
					this.__labelField__ = labelField;
				}
			}

			public function get selectedItem():* {
				return this.__selectedItem__;
			}
			
			public function set selectedItem(selectedItem:*):void {
				if (this.__selectedItem__ != selectedItem) {
					PopUpList._selectedItem_ = this.__selectedItem__ = selectedItem;
				}
			}
			
			public function get dataProvider():ArrayCollection {
				return this.__dataProvider__;
			}
			
			public function set dataProvider(dataProvider:ArrayCollection):void {
				if (this.__dataProvider__ != dataProvider) {
					this.__dataProvider__ = dataProvider;
				}
			}
		]]>
	</fx:Script>
	<s:Group width="100%" height="100%">
		<s:List id="list" 
				width="100%" labelField="{this.__labelField__}"
				dataProvider="{this.__dataProvider__}" styleName="ListStyle"
				>
			<s:itemRenderer>
				<fx:Component>
					<s:ItemRenderer>
						
						<fx:Script>
							<![CDATA[
								import com.DebuggerUtils;
								import com.ObjectUtils;
								
								import controls.MediaPresentation.DropDownList.events.SelectedTabFromListEvent;
								
								protected function radio_clickHandler(event:MouseEvent):void {
									var rb:RadioButton = event.currentTarget as RadioButton;
									PopUpList._selectedItem_ = data;
									this.parentDocument.dispatchEvent(new SelectedTabFromListEvent(SelectedTabFromListEvent.TYPE_SELECTED_TAB_FROM_LIST,data))
								}
								
								private function compare_objects(item:*,obj:*):Boolean {
									var criteria:Function = function (value:*,i:String):Boolean {
										var resp:Boolean = (value != 'uid');
										return resp;
									};
									return ObjectUtils.is_equal_for_criteria(item,obj,criteria);
								}
								
								private function is_item_selected(item:*):Boolean {
									var sItem:* = PopUpList._selectedItem_;
									return (item && sItem) ? compare_objects(item,sItem) : false;
								}
							]]>
						</fx:Script>
						
						<s:states>
							<mx:State name="normal" />
							<mx:State name="hovered" />
							<mx:State name="selected" />
						</s:states>
						<s:Rect left="0" right="0" top="0" bottom="0">
							<s:fill>
								<mx:SolidColor color="0x999999" 
											  alpha="0" 
											  alpha.hovered="0.2"
											  alpha.selected="0.6" />
							</s:fill>
						</s:Rect>
						<s:HGroup width="100%">
							<s:HGroup width="100%" paddingTop="10" paddingLeft="10">
								<s:Label id="itemLabel" text="{data.title}" width="100%"/>
							</s:HGroup>
							<s:RadioButton id="itemSelection" name="{data.name}" selected="{is_item_selected(data)}" click="radio_clickHandler(event)"/>
						</s:HGroup>
					</s:ItemRenderer>
				</fx:Component>
			</s:itemRenderer>
		</s:List>
	</s:Group>
</s:Scroller>
