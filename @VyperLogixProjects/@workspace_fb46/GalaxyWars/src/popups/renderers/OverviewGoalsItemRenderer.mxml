<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="true">
	<fx:Declarations>
	</fx:Declarations>
	<s:states>
		<mx:State name="normal" />
		<mx:State name="hovered" />
		<mx:State name="selected" />
	</s:states>
	<fx:Script>
		<![CDATA[
			import com.DebuggerUtils;
			
			import mx.core.FlexGlobals;
			
			import factories.CrystalFactory;
			import factories.DeuteriumFactory;
			import factories.MetalFactory;
			import factories.ResourceFactory;
			
			private var __data__:Object;
			
			private var app:GalaxyWars = FlexGlobals.topLevelApplication as GalaxyWars;

			public override function get data():Object {
				return this.__data__;
			}
			
			public override function set data(data:Object):void {
				app.log = this.className+'.(set) data.1 --> data='+DebuggerUtils.explainThis(data);
				if (this.__data__ != data) {
					this.__data__ = data;
					this.factory_name.text = ResourceFactory.normalize_factory_name(data['name']);
					this.info.text = 'Storage M: '+Math.ceil(MetalFactory.current_capacity_percent)+'%'+', C: '+Math.ceil(CrystalFactory.current_capacity_percent)+'%'+', D: '+Math.ceil(DeuteriumFactory.current_capacity_percent)+'%';
				}
			}
		]]>
	</fx:Script>
	
	<s:Rect left="0" right="0" top="0" bottom="0">
		<s:stroke>
			<mx:SolidColorStroke color="0xCCCCCC" joints="round" weight="2"/>
		</s:stroke>
		<s:fill>
			<mx:SolidColor color="0x999999" alpha="0" alpha.hovered="0.2"
						  alpha.selected="0.6" />
		</s:fill>
	</s:Rect>
	<s:VGroup width="100%" paddingLeft="10" paddingTop="10" paddingRight="10" paddingBottom="10">
		<s:HGroup width="100%">
			<s:HGroup width="100%">
				<s:Label id="factory_name" text="???" styleName="OverviewGoalsItemLabel"/>
			</s:HGroup>
			<s:HGroup width="100%" paddingLeft="10">
				<s:Label id="info" text="???" styleName="OverviewGoalsItemLabel"/>
			</s:HGroup>
		</s:HGroup>
	</s:VGroup>
</s:ItemRenderer>
