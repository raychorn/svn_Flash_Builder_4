/***************************** Manuel Gonzalez           ** design@stheory.com        ** www.stheory.com           ** www.codingcolor.com       ******************************/package com.YouTube{	import com.newcommerce.youtube.data.ThumbnailData;	import com.newcommerce.youtube.data.VideoData;	import com.newcommerce.youtube.events.VideoFeedEvent;	import com.newcommerce.youtube.events.StandardVideoFeedEvent;	import com.newcommerce.youtube.feeds.VideoFeed;	import com.newcommerce.youtube.iterators.ThumbnailIterator;	import com.newcommerce.youtube.webservice.YouTubeClient;	import flash.events.Event;	import flash.events.EventDispatcher;	import flash.events.IEventDispatcher;	public class YouTubeSearch extends EventDispatcher	{		private static  var _instance:YouTubeSearch;		protected var _ws:YouTubeClient;				protected var _requestId:Number;						public function YouTubeSearch(singletonEnforcer:SingletonEnforcer) {			var target:IEventDispatcher=null			super(target);		}				public static function getInstance():YouTubeSearch {			if (_instance == null) {				_instance=new YouTubeSearch(new SingletonEnforcer  );				_instance.init();			}			return _instance;		}		/*		Method:init		Parameters:		Returns:		*/		public function init():void{						_ws = YouTubeClient.getInstance();			_ws.addEventListener(VideoFeedEvent.VIDEO_DATA_RECEIVED, videoSearchResults);			_ws.addEventListener(StandardVideoFeedEvent.STANDARD_VIDEO_DATA_RECEIVED, standardVideoFeedReady);		}		/*		Method:startSearch		Parameters:		inSearchString:String		Returns:		*/		public function startSearch(inSearchString:String):void		{			_requestId = _ws.getVideos(inSearchString, "", null, null, ["music"], ["videos"], YouTubeClient.ORDER_BY_VIEWCOUNT, YouTubeClient.RACY_INCLUDE);		}		/*		Method:loadTopRatedFeed		Parameters:		inStartIndex:Number=1		inMaxResults:Number=10		Returns:		*/		public function loadTopRatedFeed(inStartIndex:Number=1, inMaxResults:Number=10):void		{			_requestId = _ws.getStandardFeed(YouTubeClient.STD_TOP_RATED, YouTubeClient.TIME_TODAY, inStartIndex,inMaxResults);		}		/*		Method:loadRecentlyFeaturedFeed		Parameters:		inStartIndex:Number=1		inMaxResults:Number=10		Returns:		*/		public function loadRecentlyFeaturedFeed(inStartIndex:Number=1, inMaxResults:Number=10):void		{						_requestId  = _ws.getStandardFeed(YouTubeClient.STD_RECENTLY_FEATURED, YouTubeClient.TIME_TODAY, inStartIndex,inMaxResults);		}		/*		Method:loadMostDiscussedFeed		Parameters:		Returns:		*/		public function loadMostDiscussedFeed():void		{			_requestId  = _ws.getStandardFeed(YouTubeClient.STD_MOST_DISCUSSED, YouTubeClient.TIME_TODAY);		}		/*		Method:videoBuildVideoArray		Parameters:		inEvent:*		Returns:Array		*/		private function videoBuildVideoArray(inEvent:*):Array		{				var feed:VideoFeed = inEvent.feed;				var video:VideoData;					var videoArray:Array = new Array()							while(video = feed.next())				{									var videoObject = new Object();					// video title					videoObject.title = video.title;					videoObject.url = video.id;					videoObject.id = video.actualId;					videoObject.count = video.viewCount;					/*					trace("Title : " + video.title)					trace("ID " + video.id);					trace("Actual ID " + video.actualId);					trace("View Count " + video.viewCount);					*/					var tnIt:ThumbnailIterator = video.media.thumbnails;					var tn:ThumbnailData;										while(tn = tnIt.next())					{						if(checkIsFirstImage(tn.url))						{							videoObject.tnURL = tn.url;							//trace("tn " + tn.url + " w " + tn.width + " h " + tn.height)						}					}						videoArray.push(videoObject);				}								return videoArray;		}		/*		Method:standardVideoFeedReady		Parameters:		event:StandardVideoFeedEvent		Returns:		*/		private function standardVideoFeedReady(event:StandardVideoFeedEvent):void		{			if(_requestId == event.requestId){			var returnArray = videoBuildVideoArray(event);							}else{				trace("this call:"+event.requestId+" isn't ours. We'll wait for the next one...");			}			dispatchEvent(new YouTubeSearchEvent(YouTubeSearchEvent.ON_STANDARD_VIDEO_DATA_FEED_READY,returnArray));		}		/*		Method:videoSearchResults		Parameters:		event:VideoFeedEvent		Returns:		*/		private function videoSearchResults(event:VideoFeedEvent):void		{			if(_requestId == event.requestId)			{			var returnArray = videoBuildVideoArray(event);							}else{				trace("this call:"+event.requestId+" isn't ours. We'll wait for the next one...");			}			dispatchEvent(new YouTubeSearchEvent(YouTubeSearchEvent.ON_VIDEO_DATA_READY,returnArray));		}				/*		Method:checkIsFirstImage		Parameters:		inUrl:String		Returns: Boolean		*/		private function checkIsFirstImage(inUrl:String):Boolean {			var isFirstImage:Boolean;						var vIndex:Number = inUrl.lastIndexOf("/");						if (vIndex == -1) {				//no last index				isFirstImage = false;			} else {				if(inUrl.substr(vIndex + 1,inUrl.length) == "1.jpg"){					isFirstImage = true;				}else{					isFirstImage = false;				}							}						return isFirstImage;		}			}	}internal class SingletonEnforcer {}