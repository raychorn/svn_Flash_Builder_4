/***************************** Manuel Gonzalez           ** design@stheory.com        ** www.stheory.com           ** www.codingcolor.com       ******************************/package com.view{	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.display.Shape;	import flash.display.Loader;	import flash.display.Bitmap;	import flash.events.MouseEvent;	import flash.events.Event;	import flash.events.ProgressEvent;	import flash.events.IOErrorEvent;	import flash.net.URLRequest;	import flash.text.TextField;	import flash.system.Security;	import flash.events.SecurityErrorEvent;	public class VideoPanel extends MovieClip {		private var videoTitle:String;		private var videoId:String;		private var videoUrl:String;		private var videoViewCount:String;		private var tnPath:String;		private var controller:Object;		private var imgLoader:Loader;		private var preloadBar:MovieClip;		private var container:Sprite;		private var contMask:Sprite;		private var titleMaxChar:Number=35;		private var statusTextField:TextField;		public function set control(inObj:Object):void {			controller = inObj;		}		public function get control():Object {			return contoller;		}		public function set id(inStr:String):void {			videoId = inStr;		}		public function get id():String {			return videoId;		}		public function set url(inStr:String):void {			videoUrl = inStr;		}		public function get url():String {			return videoUrl;		}		public function set vidTitle(inStr:String):void {			videoTitle = inStr.toLowerCase();		}		public function get vidTitle():String {			return videoTitle;		}		public function set viewCount(inStr:String):void {			videoViewCount = inStr;		}		public function get viewCount():String {			return videoViewCount;		}		public function set tnUrl(inStr:String):void {			tnPath = inStr;		}		public function get tnUrl():String {			return tnPath;		}		/*Constructor*/		public function VideoPanel() {			super();			preloadBar = preloader.bar;			preloadBar.scaleX = 0;			preloader.alpha = 0;		}		/*		Method:init		Parameters:		Returns:		*/		public function init():void {			container = new Sprite();			container.x = 10;			container.y = 10 ;			contMask = new Sprite();			contMask.x = container.x;			contMask.y = container.y;			createRectangle(contMask,0x000000,120,90);			addChild(contMask);			addChild(container);			container.mask = contMask;			this.buttonMode = true;			this.addEventListener(MouseEvent.CLICK,onClick);			displayTextData();			loadTn();		}		/*		Method:displayTextData		Parameters:		Returns:		*/		private function displayTextData():void {			titleF.text = truncate(videoTitle,titleMaxChar);			viewF.text = "views : " + formatNumberWithCommas(videoViewCount);		}		/*		Method:loadTn		Parameters:		Returns:		*/		private function loadTn():void {			preloader.alpha = 1;			imgLoader = new Loader();			imgLoader.contentLoaderInfo.addEventListener(Event.INIT,initImage);			imgLoader.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS,onProgress);			imgLoader.contentLoaderInfo.addEventListener(Event.COMPLETE,onImgLoaded);			imgLoader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);			imgLoader.contentLoaderInfo.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);			imgLoader.load(new URLRequest(tnPath));		}		/*		Method:securityErrorHandler		Parameters:		event:Event		Returns:		*/		private function securityErrorHandler(event:SecurityErrorEvent):void {			statusTextField = new TextField();			statusTextField.x = preloader.x + preloader.width/2;			statusTextField.y = (preloader.y + preloader.height) + 2;			statusTextField.text ="security error"+ event;			addChild(statusTextField);		}		/*		Method:ioErrorHandler		Parameters:		event:Event		Returns:		*/		private function ioErrorHandler(event:Event):void {			statusTextField = new TextField();			statusTextField.x = preloader.x + preloader.width/2;			statusTextField.y = (preloader.y + preloader.height) + 2;			statusTextField.text ="loading error"+ event;			addChild(statusTextField);		}		/*		Method:initImage		Parameters:		event:Event		Returns:		*/		private function initImage(event:Event):void {			var image : Bitmap = imgLoader.contentLoaderInfo.content as Bitmap;			container.addChild(image);		}		/*		Method:onImgLoaded		Parameters:		event:Event		Returns:		*/		private function onImgLoaded(event:Event):void {			preloader.alpha = 0;			imgLoader.contentLoaderInfo.removeEventListener(Event.INIT,initImage);			imgLoader.contentLoaderInfo.removeEventListener(ProgressEvent.PROGRESS,onProgress);			imgLoader.contentLoaderInfo.removeEventListener(Event.COMPLETE,onImgLoaded);			imgLoader = null;		}		/*		Method:onProgress		Parameters:		event:ProgressEvent		Returns:		*/		private function onProgress(event:ProgressEvent):void {			var loaded:Number = event.bytesLoaded;			var total:Number = event.bytesTotal;			var percLoaded:Number = loaded/total;			preloadBar.scaleX = percLoaded;			//trace("onProgress : " + percLoaded)		}		/*		Method:onClick		Parameters:		event:MouseEvent		Returns:		*/		private function onClick(event:MouseEvent):void {			controller.setSelectedPanel(this);		}		/*		Method:createRectangle		Parameters:		inSrc:*		inColor:Number		inW:Number;		inH:Number;		Return:		*/		private function createRectangle(inSrc:*,inColor:Number=0x999999,inW:Number=80,inH:Number=50):void {			var rect:Shape=new Shape();			rect.graphics.clear();			rect.graphics.beginFill(inColor);			rect.graphics.drawRect(0,0,inW,inH);			rect.graphics.endFill();			inSrc.addChild(rect);		}		/*		Method:truncate		Parameters:		p_string:String		p_len:uint		p_suffix:String		Returns:		*/		private function truncate(p_string:String, p_len:uint, p_suffix:String = "..."):String {			if (p_string == null) {				return '';			}			p_len -= p_suffix.length;			var trunc:String = p_string;			if (trunc.length > p_len) {				trunc = trunc.substr(0, p_len);				if (/[^\s]/.test(p_string.charAt(p_len))) {					trunc = trimRight(trunc.replace(/\w+$|\s+$/, ''));				}				trunc += p_suffix;			}			return trunc;		}		/*		Method:trimRight		Parameters:		p_string:String		Returns:		*/		private function trimRight(p_string:String):String {			if (p_string == null) {				return '';			}			return p_string.replace(/\s+$/,'');		}		/*		Method:formatNumberWithCommas		Parameters:		Returns:		*/		private function formatNumberWithCommas(number:Number):String {			var negNum:String = "";			if (number<0) {				negNum = "-";				number = Math.abs(number);			}			var num:String = String(number);			var results:Array = num.split(/\./);			num=results[0];			if (num.length>3) {				var mod:Number = num.length%3;				var output:String = num.substr(0, mod);				for (var i:Number = mod; i<num.length; i += 3) {					output += ((mod == 0 && i == 0) ? "" : ",")+num.substr(i, 3);				}				if (results.length>1) {					if (results[1].length == 1) {						return negNum + output + "." + results[1] + "0";					} else {						return negNum + output + "." + results[1];					}				} else {					return negNum + output;				}			}			if (results.length>1) {				if (results[1].length == 1) {					return negNum + num + "." + results[1] + "0";				} else {					return negNum + num + "." + results[1];				}			} else {				return negNum + num;			}		}	}}