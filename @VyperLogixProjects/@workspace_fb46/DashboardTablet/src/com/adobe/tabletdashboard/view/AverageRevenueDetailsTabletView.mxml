<?xml version="1.0" encoding="utf-8"?>
<s:View preinitialize="preinitializeHandler()"
		viewDeactivate="viewDeactivateHandler()"
		viewActivate="viewActivateHandler(event)"
		actionBarVisible="false"
		xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:components="com.adobe.mobiledashboard.view.components.*"
		xmlns:enum="com.adobe.dashboard.enum.*"
		xmlns:charts="com.adobe.dashboard.view.charts.*"
		xmlns:components1="com.adobe.tabletdashboard.view.components.*">

	<fx:Script>
		<![CDATA[
			import com.adobe.dashboard.model.AppModel;
			import com.adobe.dashboard.presenter.AverageRevenuePresenter;

			import mx.collections.ArrayCollection;

			import spark.events.ViewNavigatorEvent;


			[Bindable]
			private var presenter:AverageRevenuePresenter;

			[Bindable]
			protected var selectOptionList:ArrayCollection=new ArrayCollection([{label: "My Sales"}, {label: "Company Sales"}]);


			//
			// Private Methods
			//

			private function addListeners():void
			{
				removeListeners();

				presenter.chartDetailsPresenter.addEventListener(Event.CHANGE, dataChangeHandler, false, 0, true);
			}

			private function removeListeners():void
			{
				if (presenter && presenter.chartDetailsPresenter && presenter.chartDetailsPresenter.hasEventListener(Event.CHANGE))
				{
					presenter.chartDetailsPresenter.removeEventListener(Event.CHANGE, dataChangeHandler);
				}
			}


			//
			// Event Handlers
			//

			protected function preinitializeHandler():void
			{
				presenter=AppModel.getInstance().averageRevenuePresenter;
			}

			protected function viewActivateHandler(event:ViewNavigatorEvent):void
			{
				addListeners();

				// Fetch data
				presenter.getDetailsData();
				presenter.hideAllTourTips();
			}

			protected function viewDeactivateHandler():void
			{
				removeListeners();
			}

			protected function dataChangeHandler(event:Event):void
			{
				chartDisplay.visible=true;
				chartDisplay.includeInLayout=true;

				loadingMessageDisplay.visible=false;
			}
		]]>
	</fx:Script>

	<s:states>
		<s:State name="portrait"/>
		<s:State name="landscape"/>
	</s:states>

	<!-- background -->
	<s:Rect radiusX="2"
			radiusY="2"
			width="100%"
			height="100%">
		<s:stroke>
			<s:SolidColorStroke color="0x262626"/>
		</s:stroke>
		<s:fill>
			<s:SolidColor color="0x1a1a1a"/>
		</s:fill>
	</s:Rect>



	<!-- details title -->
	<s:VGroup top="15"
			  left="10"
			  right="10"
			  verticalAlign="middle">
		<s:Label fontWeight="bold"
				 styleName="viewTitleStyle"
				 text="My Sales > {presenter.detailsLabel}"/>
		<components1:TabletHorizontalRule width="100%"/>
	</s:VGroup>
	<!-- loading message -->
	<s:VGroup horizontalCenter="0"
			  verticalCenter="0"
			  horizontalAlign="center">
		<s:BusyIndicator id="loadingIndicator"
						 symbolColor="#ffffff"
						 width="30"
						 height="30"/>
		<s:Label id="loadingMessageDisplay"
				 text="Building Chart"/>
	</s:VGroup>

	<!-- chart -->
	<charts:RevenueDetailsChart id="chartDisplay"
								left.landscape="0"
								left.portrait="20"
								right.landscape="0"
								right.portrait="20"
								top="75"
								bottom="30"
								bottom.landscape="0"
								includeInLayout="false"
								pieDisplayLayout.portrait="{chartDisplay.verticalLayout}"
								pieDisplayLayout.landscape="{chartDisplay.horizontalLayout}"
								pieChartTop="0"
								pieChartBottom.portrait="220"
								pieChartBottom.landscape="0"
								visible="false"
								chartPresenter="{presenter.chartDetailsPresenter}"/>

</s:View>
