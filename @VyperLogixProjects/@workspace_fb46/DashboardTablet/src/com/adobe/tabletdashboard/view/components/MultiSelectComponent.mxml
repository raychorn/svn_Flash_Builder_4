<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:images="assets.images.*"
		  xmlns:components="com.adobe.mobiledashboard.view.components.*"
		  gap="0">

	<fx:Metadata>
		[Event(name="change", type="flash.events.Event")]
	</fx:Metadata>

	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.core.FlexGlobals;
			import mx.events.ResizeEvent;
			import mx.managers.PopUpManager;

			import spark.events.IndexChangeEvent;

			private var _dataProvider:ArrayCollection;

			[Bindable]
			public function get dataProvider():ArrayCollection
			{
				return _dataProvider;
			}

			public function set dataProvider(value:ArrayCollection):void
			{
				_dataProvider=value;

				if (_dataProvider && _dataProvider.length > 0)
				{
					_selectedItem=_dataProvider.getItemAt(0);
				}
			}


			[Bindable]
			private var _selectedItem:Object;


			public function get selectedItem():Object
			{
				return _selectedItem;
			}

			public function set selectedItem(value:Object):void
			{
				_selectedItem=value;
				if (_selectedItem && _selectedItem.label)
				{
					text=_selectedItem.label;
				}

				dispatchEvent(new Event(Event.CHANGE));
			}

			private var _text:String;

			[Bindable]
			public function get text():String
			{
				return _text;
			}

			public function set text(value:String):void
			{
				_text=value;
			}



			//
			// Private methods
			//

			private function addListeners():void
			{

				systemManager.stage.addEventListener(KeyboardEvent.KEY_UP, deviceKeyUpHandler, false, 1000, true);
			}

			private function removeListeners():void
			{

				systemManager.stage.removeEventListener(KeyboardEvent.KEY_UP, deviceKeyUpHandler);
			}

			private function closePopUp():void
			{

				removeListeners();

			}



			//
			// Event Handlers
			//

			protected function stageClickHandler(event:MouseEvent):void
			{
				removeListeners();
			}


			/**
			 * Handler for listening to device key events.
			 */
			protected function deviceKeyUpHandler(event:KeyboardEvent):void
			{
				var key:uint=event.keyCode;

				if (key == Keyboard.BACK)
				{
					event.stopImmediatePropagation();
					event.stopPropagation();

					closePopUp();
				}
			}



			protected function list_changeHandler(event:IndexChangeEvent):void
			{
				selectedItem=selectListDisplay.selectedItem;
				closePopUp();
				selectListDisplay.selectedIndex=-1;
				calloutButton.closeDropDown();
			}
		]]>
	</fx:Script>

	<s:CalloutButton id="calloutButton"
					 label="{_selectedItem.label}"
					 skinClass="skins.containers.CallouButtonSkin">
		<s:Group width="100%"
				 height="100%">
			<!-- background -->
			<s:Rect width="100%"
					height="100%"
					radiusX="8"
					radiusY="8">
				<s:fill>
					<s:SolidColor color="0x000000"
								  alpha="0.8"/>
				</s:fill>
				<s:stroke>
					<s:SolidColorStroke color="0xCCCCCC"
										alpha="0.5"
										pixelHinting="true"
										weight="1.5"/>
				</s:stroke>
			</s:Rect>

			<!-- list of options -->
			<s:List id="selectListDisplay"
					width="100%"
					height="100%"
					dataProvider="{dataProvider}"
					change="list_changeHandler(event)"
					color="#000000">
				<s:layout>
					<s:VerticalLayout horizontalAlign="contentJustify"
									  gap="0"/>
				</s:layout>
			</s:List>
		</s:Group>


	</s:CalloutButton>


</s:VGroup>
